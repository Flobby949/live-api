<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>top.flobby</groupId>
        <artifactId>live</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>live-im-core-server</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>

        <dependency>
            <groupId>top.flobby</groupId>
            <artifactId>live-common-interface</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>top.flobby</groupId>
            <artifactId>live-framework-redis-starter</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>top.flobby</groupId>
            <artifactId>live-framework-mq-starter</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>top.flobby</groupId>
            <artifactId>live-im-core-server-interface</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${artifactId}-docker</finalName>
        <plugins>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
                <executions>
                    <!-- 当 mvn 执行 install 操作的时候，执行 docker 的 build -->
                    <execution>
                        <id>build</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <imageName>${docker-tag-name}/${project.build.finalName}</imageName>
                    <!--指定 Dockerfile 文件的位置-->
                    <dockerDirectory>${project.basedir}/docker</dockerDirectory>
                    <!-- 指定 jar 包路径，这里对应 Dockerfile 中复制 jar 包到 docker 容器指定目录配置，也可以写到 Dockerfile 中 -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <!-- 将下边目录的内容，拷贝到 docker 镜像中 -->
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}-exec.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${arthas.file.path}</directory>
                            <include>arthas-bin.zip</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>